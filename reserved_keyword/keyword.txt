as - (Cur) ilkel türlerin dönüşüm işlemlerinde, bir öğe içeren belirli bir özelliği belirsizleştirirken, use ve extern crate ifadelerindeki öğeleri yeniden adlandırırken.
async - (Cur) eş zamansız işlemlerde geçerli iş parçasını engellemeden çalışmak gerektiğinde
await - (Cur) bir Future' ın sonucu hazır olana kadar yürütmeyi askıya almak gerektiğinde
break - (Cur) bir döngüden hemen çıkmak gerektiğinde.
const - (Cur) sabit öğeleri veya sabit ham tanımlayıcıları bildirirken
continue - (Cur) bir sonraki döngü yinelemesine geçilmek istenirken 
crate - (Cur) harici bir sandığı veya bir makro içinde sandık temsil ederken
dyn - (Cur) bir özellik nesnesine dinamik başvuru yaparken
else - (Cur) kontrol akışı yapıları olan if ve if let için yedek bir durumu temsil ederken
enum - (Cur) numaralandırılmış çoklu seçim yani cebirsel veri türü tanırmlarken 
extern - (Cur) harici bir sandık, değişken veya işlev bağlarken
false - (Cur) mantıksal yanlış değerini ifade eden Boolean değişmezi gerektiğinde
fn - (Cur) bir işlev veya işlev işaretçisi tanımlarken
for - (Cur) bir yineleyici üzerinden öğeler arasında geçiş yaparken, bir özelliği uygularken, daha yüksek seviyede yaşam süresi bildirirken
if - (Cur) bir koşullu ifadenin sonucuna göre yönlenirken
impl - (Cur) doğal veya sürekli işlevsellik uygulama gerektiğinde
in - (Cur) döngüsü söz dizimini kullanırken
let - (Cur) bir değişkeni bağlarken
loop - (Cur) bir koşulsuz döngü gerektiğinde
match - (Cur) herhangi bir değeri en uygun kalıpla eşleştirirken
mod - (Cur) bir modül tanımlar ya da bildirirken
move - (Cur) yakalanan her şeyin mülkiyetini devralabilmek için oluşturulan kapama işlevlerinde
mut - (Cur) referans, ham tanımlayıcılar veya örüntü bağlamında değişirlik istendiğinde
pub - (Cur) yapı alanları, impl blokları veya modüllerde genel görünürlük gerektiğinde
ref - (Cur) referans ile bağlamak gerektiğinde
return - (Cur) bir işlevden dönülmesi gerektiğinde
Self - (Cur) bir özelliği uygulayan tür lakabının gerektiği hallerde 
self - (Cur) halihazırdaki modül veya bir metodun alıcısıne başvururken
static - (Cur) programın sonlanana kadar veya yaşam süresi boyunca geçerli bir genel değişken gerektiğinde 
struct - (Cur) bir yapıyı tanımlarken
super - (Cur) geçerli modülün üst öğesine başvurulurken
trait - (Cur) türe ait bir özellik tanımlanırken
true - (Cur) mantıksal doğru değerini ifade eden Boolean değişmezi gerektiğinde
type - (Cur) mevcut bir tür için lakap tanımlanırken
unsafe - (Cur) bellek güvenliği tür sistemi tarafından doğrulanamayan kod veya arabirimler: işlev, özellik, uygulama vb. tanımlanırken
use - (Cur) işaret ettiğini kapsama dahil ederken
where - (Cur) bir türün kısıtlama adımlarını bildirirken
while - (Cur) bir koşul bağlı olan döngü gerektiğinde
abstract - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
become - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
box - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
do - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
final - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
macro - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
override - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
priv - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
try - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
typeof - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
unsized - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
virtual - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
yield - (Rez) Olası bir kullanım amacıyla Rust için ayrılmıştır.
